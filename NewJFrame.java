package user_design;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridLayout;
import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import static java.util.concurrent.TimeUnit.DAYS;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.ScrollPaneLayout;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author fanan
 */
public class NewJFrame extends javax.swing.JFrame implements ActionListener {

    ArrayList  listt;
    public NewJFrame() {
        JScrollPane sp= new JScrollPane(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
         /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
               
        this.listt = new ArrayList<JTextField>();
        
   
       
        initComponents();
        
    }
/**
     * Creates new form searc1
     */
    JPanel offer = new JPanel();
       
    String tod;
String fromd;
String descrp;
String todes;
String fromdes;
String hotel;
String airport;
int id;
String room;
double cost;
int classd;
int hprice;
int tprice;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        value = new javax.swing.JTextField();
        filter = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueActionPerformed(evt);
            }
        });

        filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Date", "to", "from", "Up to cost" }));
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(318, 318, 318))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 39, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterActionPerformed

    private void valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (filter.getSelectedItem().equals("Date")){

            int count=0;
            offer.removeAll();
            offer.setLayout(new GridLayout(10,4));

            try {
                Connection con =conn.getConncetion();
                con.setAutoCommit(false);
                System.out.println("hi1");
                String query = "select distinct  offer.OSQ,hotel.hprice,airport.tprice,offer.descrp,offer.date_to,offer.date_from,offer.to_des,offer.from_des, hotoffer.hname,hotoffer.room_type,airoffer.aname,airoffer.classd from offer,hotoffer,airoffer,airport,hotel,services,seroffer where offer.date_from='"+value.getText()+"' and hotoffer.ido=offer.osq and airoffer.ido=offer.osq and hotel.hname=hotoffer.hname and airport.aname=airoffer.aname and airport.classd=airoffer.classd and hotoffer.room_type=hotel.room_type";

                Statement ps= con.createStatement();
                System.out.println("hi2");
                ps.executeUpdate(query);

                ResultSet rs=ps.executeQuery(query);
                System.out.println("hi1");
                this.getContentPane().setLayout(new FlowLayout());
                while(rs.next()){
                    System.out.println("hi3");
                    tod =rs.getString("Date_to");
                    fromd = rs.getString("Date_from");
                    descrp= rs.getString("Descrp");
                    todes= rs.getString("to_Des");
                    fromdes= rs.getString("From_des");
                    System.out.println("hi35");
                    id=Integer.parseInt(rs.getString("OSQ"));

                    classd= Integer.parseInt(rs.getString("classd"));
                    hprice= Integer.parseInt(rs.getString("hprice"));
                    tprice= Integer.parseInt(rs.getString("tprice"));
                    hotel=rs.getString("hname");
                    airport=rs.getString("aname");
                    room=rs.getString("room_type");
                    System.out.println("hi34");

                    JTextArea t1= new JTextArea ();
                    //JTextPane t1= new JTextPane ();
                    //               System.out.println(id+hotel+airport);
                    //               this.appendToPane(t1,"From Date  :"+fromd+"\n");

                    t1.append("From Date  :"+fromd+"\n");

                    t1.append("From Date  :"+fromd+"\n");
                    t1.append("To Date  :"+tod+"\n");
                    t1.append(" From :"+fromdes+"\n");
                    t1.append("To  :"+todes+"\n");
                    t1.append("Hotel Name :"+hotel+"\n");
                    t1.append("Room Type :"+room+"\n");
                    t1.append("Airport name :"+airport+"\n");
                    t1.append("Flight Class :"+classd+"\n");
                    t1.append("Discription :"+descrp+"\n");

                    java.util.Date d1 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(fromd);
                    java.util.Date d2 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(tod);
                    String []aa=fromd.split(" ");
                    String []bb=tod.split(" ");
                    LocalDate dd1=LocalDate.parse(aa[0]);
                    LocalDate dd2=LocalDate.parse(bb[0]);
                    long day= ChronoUnit.DAYS.between(dd2, dd1);
                    System.out.println(day);
                    cost = day*hprice +tprice;
                    cost=cost+cost*.2;
                    t1.append("Total Cost :"+cost+"\n");

                    t1.setName(count+"");
                    count++;

                    JButton b= new JButton ("BOOK OFFER");
                    //              p.setPreferredSize(new Dimension(350,190));
                    JPanel p= new JPanel (new GridLayout(1,2));

                    p.add(t1);
                    p.add(b);

                    this.add(p);
                    this.revalidate();
                    this.repaint();
                    b.addActionListener(this);
                    b.setActionCommand("book "+id);

                    //               t1.insert(airport,300);
                    //               t1.insert(classd+"",400);
                    //               t1.insert(room,5000);
                    //               t1.insert(descrp,600);
                    //               t1.insert(fromdes,700);
                    //               t1.insert(todes,800);

                    //               listt.add(t1);
                    //               GridBagConstraints gtf= new GridBagConstraints();
                    //               gtf.fill=GridBagConstraints.HORIZONTAL;
                    //               gtf.weightx=.5;
                    //               gtf.gridx=0;
                    //               gtf.gridwidth=2;
                    //               gtf.gridy=3+listt.size();
                    //               add (t1,gtf);
                    //               revalidate();
                    //               repaint();

                    //              t1.setText(id+"");
                    //              this.getContentPane().setLayout(new FlowLayout());
                    //                this.add(t1);

                }

                // JOptionPane.showMessageDialog(null, "no");

                con.close();
            } catch (Exception ex) {
                System.out.println(ex);
                // Logger.getLogger(employy.class.getName()).log(Level.SEVERE, null, ex);
                //

            }
        }

        //        if (filter.getSelectedItem().equals("from")){
            //               int count=0;
            //                    p.removeAll();
            //
            //                   try {
                //            Connection con =conn.getConncetion();
                //            con.setAutoCommit(false);
                // System.out.println("hi1");
                //            String query = "select distinct  offer.OSQ,hotel.hprice,airport.tprice,offer.descrp,offer.date_to,offer.date_from,offer.to_des,offer.from_des, hotoffer.hname,hotoffer.room_type,airoffer.aname,airoffer.classd from offer,hotoffer,airoffer,airport,hotel,services,seroffer where offer.from_Des='"+value.getText()+"' and hotoffer.ido=offer.osq and airoffer.ido=offer.osq and hotel.hname=hotoffer.hname and airport.aname=airoffer.aname and airport.classd=airoffer.classd and hotoffer.room_type=hotel.room_type";
                //
                //            Statement ps= con.createStatement();
                //System.out.println("hi2");
                //            ps.executeUpdate(query);
                //
                //            ResultSet rs=ps.executeQuery(query);
                //             System.out.println("hi1");
                //               this.getContentPane().setLayout(new FlowLayout());
                //           while(rs.next()){
                    // System.out.println("hi3");
                    //                tod =rs.getString("Date_to");
                    //                fromd = rs.getString("Date_from");
                    //                descrp= rs.getString("Descrp");
                    //                todes= rs.getString("to_Des");
                    //                fromdes= rs.getString("From_des");
                    //                System.out.println("hi35");
                    //                id=Integer.parseInt(rs.getString("OSQ"));
                    //
                    //                classd= Integer.parseInt(rs.getString("classd"));
                    //                hprice= Integer.parseInt(rs.getString("hprice"));
                    //               tprice= Integer.parseInt(rs.getString("tprice"));
                    //                hotel=rs.getString("hname");
                    //                airport=rs.getString("aname");
                    //                room=rs.getString("room_type");
                    //                 System.out.println("hi34");
                    //
                    //               JTextArea t1= new JTextArea ();
                    ////JTextPane t1= new JTextPane ();
                    ////               System.out.println(id+hotel+airport);
                    ////               this.appendToPane(t1,"From Date  :"+fromd+"\n");
                    //
                    //             t1.append("From Date  :"+fromd+"\n");
                    //
                    //                t1.append("From Date  :"+fromd+"\n");
                    //               t1.append("To Date  :"+tod+"\n");
                    //                t1.append(" From :"+fromdes+"\n");
                    //                t1.append("To  :"+todes+"\n");
                    //                t1.append("Hotel Name :"+hotel+"\n");
                    //                 t1.append("Room Type :"+room+"\n");
                    //                  t1.append("Airport name :"+airport+"\n");
                    //                   t1.append("Flight Class :"+classd+"\n");
                    //                    t1.append("Discription :"+descrp+"\n");
                    //
                    //
                    //                   java.util.Date d1 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(fromd);
                    //                    java.util.Date d2 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(tod);
                    //                    String []aa=fromd.split(" ");
                    //                    String []bb=tod.split(" ");
                    //                 LocalDate dd1=LocalDate.parse(aa[0]);
                    //                    LocalDate dd2=LocalDate.parse(bb[0]);
                    //                   long day= ChronoUnit.DAYS.between(dd2, dd1);
                    //                    System.out.println(day);
                    //                    cost = day*hprice +tprice;
                    //                    cost=cost+cost*.2;
                    //                    t1.append("Total Cost :"+cost+"\n");
                    //
                    //
                    //                 t1.setName(count+"");
                    //               count++;
                    //              JButton b= new JButton ("BOOK OFFER");
                    //               p.add(t1);
                    //               p.add(b);
                    //               this.add(p);
                    //               this.revalidate();
                    //               this.repaint();
                    //
                    //
                    ////               t1.insert(airport,300);
                    ////               t1.insert(classd+"",400);
                    ////               t1.insert(room,5000);
                    ////               t1.insert(descrp,600);
                    ////               t1.insert(fromdes,700);
                    ////               t1.insert(todes,800);
                    //
                    ////               listt.add(t1);
                    ////               GridBagConstraints gtf= new GridBagConstraints();
                    ////               gtf.fill=GridBagConstraints.HORIZONTAL;
                    ////               gtf.weightx=.5;
                    ////               gtf.gridx=0;
                    ////               gtf.gridwidth=2;
                    ////               gtf.gridy=3+listt.size();
                    ////               add (t1,gtf);
                    ////               revalidate();
                    ////               repaint();
                    //
                    ////              t1.setText(id+"");
                    ////              this.getContentPane().setLayout(new FlowLayout());
                    ////                this.add(t1);
                    //
                    //
                    //            }
                //
                //            // JOptionPane.showMessageDialog(null, "no");
                //
                //            con.close();
                //        } catch (Exception ex) {
                //            System.out.println(ex);
                //           // Logger.getLogger(employy.class.getName()).log(Level.SEVERE, null, ex);
                ////
                //
                //        }
            //

            //        }
        if (filter.getSelectedItem().equals("to")){
            int count=0;

            offer.removeAll();
            offer.setLayout(new GridLayout(20,20));
            this.revalidate();
            this.repaint();

            try {
                Connection con =conn.getConncetion();
                con.setAutoCommit(false);
                System.out.println("hi1");
                String query = "select distinct  offer.OSQ,hotel.hprice,airport.tprice,offer.descrp,offer.date_to,offer.date_from,offer.to_des,offer.from_des, hotoffer.hname,hotoffer.room_type,airoffer.aname,airoffer.classd from offer,hotoffer,airoffer,airport,hotel,services,seroffer where offer.To_Des='"+value.getText()+"' and hotoffer.ido=offer.osq and airoffer.ido=offer.osq and hotel.hname=hotoffer.hname and airport.aname=airoffer.aname and airport.classd=airoffer.classd and hotoffer.room_type=hotel.room_type";

                Statement ps= con.createStatement();
                System.out.println("hi2");
                ps.executeUpdate(query);

                ResultSet rs=ps.executeQuery(query);
                System.out.println("hi1");
                this.getContentPane().setLayout(new FlowLayout());
                while(rs.next()){
                    System.out.println("hi3");
                    tod =rs.getString("Date_to");
                    fromd = rs.getString("Date_from");
                    descrp= rs.getString("Descrp");
                    todes= rs.getString("to_Des");
                    fromdes= rs.getString("From_des");
                    System.out.println("hi35");
                    id=Integer.parseInt(rs.getString("OSQ"));

                    classd= Integer.parseInt(rs.getString("classd"));
                    hprice= Integer.parseInt(rs.getString("hprice"));
                    tprice= Integer.parseInt(rs.getString("tprice"));
                    hotel=rs.getString("hname");
                    airport=rs.getString("aname");
                    room=rs.getString("room_type");
                    System.out.println("hi34");

                    JTextArea t1= new JTextArea ();
                    //JTextPane t1= new JTextPane ();
                    //               System.out.println(id+hotel+airport);
                    //               this.appendToPane(t1,"From Date  :"+fromd+"\n");

                    t1.append("From Date  :"+fromd+"\n");

                    t1.append("From Date  :"+fromd+"\n");
                    t1.append("To Date  :"+tod+"\n");
                    t1.append(" From :"+fromdes+"\n");
                    t1.append("To  :"+todes+"\n");
                    t1.append("Hotel Name :"+hotel+"\n");
                    t1.append("Room Type :"+room+"\n");
                    t1.append("Airport name :"+airport+"\n");
                    t1.append("Flight Class :"+classd+"\n");
                    t1.append("Discription :"+descrp+"\n");

                    java.util.Date d1 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(fromd);
                    java.util.Date d2 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(tod);
                    String []aa=fromd.split(" ");
                    String []bb=tod.split(" ");
                    LocalDate dd1=LocalDate.parse(aa[0]);
                    LocalDate dd2=LocalDate.parse(bb[0]);
                    long day= ChronoUnit.DAYS.between(dd2, dd1);
                    System.out.println(day);
                    cost = day*hprice +tprice;
                    cost=cost+cost*.2;
                    t1.append("Total Cost :"+cost+"\n");

                    t1.setName(count+"");
                    count++;

                    JButton b= new JButton ("BOOK OFFER");

                    //              p.setPreferredSize(new Dimension(350,190));
                    JPanel p= new JPanel (new GridLayout(1,2));

                    p.add(t1);
                    p.add(b);

                    offer.add(p);

                    jPanel2.add(offer);
                    this.add(jPanel2);
                    this.revalidate();
                    this.repaint();
                    b.addActionListener(this);
                    b.setActionCommand("book "+id);

                    //               t1.insert(airport,300);
                    //               t1.insert(classd+"",400);
                    //               t1.insert(room,5000);
                    //               t1.insert(descrp,600);
                    //               t1.insert(fromdes,700);
                    //               t1.insert(todes,800);

                    //               listt.add(t1);
                    //               GridBagConstraints gtf= new GridBagConstraints();
                    //               gtf.fill=GridBagConstraints.HORIZONTAL;
                    //               gtf.weightx=.5;
                    //               gtf.gridx=0;
                    //               gtf.gridwidth=2;
                    //               gtf.gridy=3+listt.size();
                    //               add (t1,gtf);
                    //               revalidate();
                    //               repaint();

                    //              t1.setText(id+"");
                    //              this.getContentPane().setLayout(new FlowLayout());
                    //                this.add(t1);

                }

                // JOptionPane.showMessageDialog(null, "no");

                con.close();
            } catch (Exception ex) {
                System.out.println(ex);
                // Logger.getLogger(employy.class.getName()).log(Level.SEVERE, null, ex);
                //

            }
        }

        if (filter.getSelectedItem().equals("from")){
            int count=0;
            int i=0;
            int j=0;

            offer.removeAll();
            offer.setLayout(new GridLayout(20,20));
            this.revalidate();
            this.repaint();

            try {
                Connection con =conn.getConncetion();
                con.setAutoCommit(false);
                System.out.println("hi1");
                String query = "select distinct offer.OSQ,  hotel.hprice,airport.tprice,offer.descrp,offer.date_to,offer.date_from,offer.to_des,offer.from_des, hotoffer.hname,hotoffer.room_type,airoffer.aname,airoffer.classd from offer,hotoffer,airoffer,airport,hotel,services,seroffer where offer.from_Des='"+value.getText()+"' and hotoffer.ido=offer.osq and airoffer.ido=offer.osq and hotel.hname=hotoffer.hname and airport.aname=airoffer.aname and airport.classd=airoffer.classd and hotoffer.room_type=hotel.room_type";

                Statement ps= con.createStatement();
                System.out.println("hi2");
                ps.executeUpdate(query);

                ResultSet rs=ps.executeQuery(query);
                System.out.println("hi1");
                this.getContentPane().setLayout(new FlowLayout());
                while(rs.next()){
                    System.out.println("hi3");
                    tod =rs.getString("Date_to");
                    fromd = rs.getString("Date_from");
                    descrp= rs.getString("Descrp");
                    todes= rs.getString("to_Des");
                    fromdes= rs.getString("From_des");
                    System.out.println("hi35");
                    id=Integer.parseInt(rs.getString("OSQ"));

                    classd= Integer.parseInt(rs.getString("classd"));
                    hprice= Integer.parseInt(rs.getString("hprice"));
                    tprice= Integer.parseInt(rs.getString("tprice"));
                    hotel=rs.getString("hname");
                    airport=rs.getString("aname");
                    room=rs.getString("room_type");
                    System.out.println("hi34");

                    JTextArea t1= new JTextArea ();
                    //JTextPane t1= new JTextPane ();
                    //               System.out.println(id+hotel+airport);
                    //               this.appendToPane(t1,"From Date  :"+fromd+"\n");

                    t1.append("From Date  :"+fromd+"\n");

                    t1.append("From Date  :"+fromd+"\n");
                    t1.append("To Date  :"+tod+"\n");
                    t1.append(" From :"+fromdes+"\n");
                    t1.append("To  :"+todes+"\n");
                    t1.append("Hotel Name :"+hotel+"\n");
                    t1.append("Room Type :"+room+"\n");
                    t1.append("Airport name :"+airport+"\n");
                    t1.append("Flight Class :"+classd+"\n");
                    t1.append("Discription :"+descrp+"\n");

                    java.util.Date d1 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(fromd);
                    java.util.Date d2 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(tod);
                    String []aa=fromd.split(" ");
                    String []bb=tod.split(" ");
                    LocalDate dd1=LocalDate.parse(aa[0]);
                    LocalDate dd2=LocalDate.parse(bb[0]);
                    long day= ChronoUnit.DAYS.between(dd2, dd1);
                    System.out.println(day);
                    cost = day*hprice +tprice;
                    cost=cost+cost*.2;
                    t1.append("Total Cost :"+cost+"\n");

                    t1.setName(count+"");
                    count++;
                    JButton b= new JButton ("BOOK OFFER");
                    JButton b2= new JButton ("Show Details");
                    //              p.setPreferredSize(new Dimension(350,190));
                    JPanel p= new JPanel (new GridLayout(1,2));

                    p.add(t1);
                    p.add(b);

                    offer.add(p,i,j);
                    j++;
                    if(j==19){
                        j=0;
                        i++;
                    }

                    this.add(offer);

                    //               offer.add(p,i,j);
                    //               j++;
                    //               if(j==3){
                        //                   i=0;
                        //                   i++;
                        //               }
                    this.revalidate();
                    this.repaint();
                    b.addActionListener(this);
                    b.setActionCommand("book "+id);
                    b2.addActionListener(this);
                    b2.setActionCommand("detail "+id);

                    //               t1.insert(airport,300);
                    //               t1.insert(classd+"",400);
                    //               t1.insert(room,5000);
                    //               t1.insert(descrp,600);
                    //               t1.insert(fromdes,700);
                    //               t1.insert(todes,800);

                    //               listt.add(t1);
                    //               GridBagConstraints gtf= new GridBagConstraints();
                    //               gtf.fill=GridBagConstraints.HORIZONTAL;
                    //               gtf.weightx=.5;
                    //               gtf.gridx=0;
                    //               gtf.gridwidth=2;
                    //               gtf.gridy=3+listt.size();
                    //               add (t1,gtf);
                    //               revalidate();
                    //               repaint();

                    //              t1.setText(id+"");
                    //              this.getContentPane().setLayout(new FlowLayout());
                    //                this.add(t1);

                }

                // JOptionPane.showMessageDialog(null, "no");

                con.close();
            } catch (Exception ex) {
                System.out.println(ex);
                // Logger.getLogger(employy.class.getName()).log(Level.SEVERE, null, ex);
                //

            }

        }
        if (filter.getSelectedItem().equals("Up to cost")){
            int count=0;
            offer.removeAll();
            offer.setLayout(new GridLayout(10,4));
            try {
                Connection con =conn.getConncetion();
                con.setAutoCommit(false);
                System.out.println("hi1");
                String query = "select distinct  offer.OSQ, hotel.hprice,airport.tprice,offer.descrp,offer.date_to,offer.date_from,offer.to_des,offer.from_des, hotoffer.hname,hotoffer.room_type,airoffer.aname,airoffer.classd from offer,hotoffer,airoffer,airport,hotel,services,seroffer where   hotoffer.ido=offer.osq and airoffer.ido=offer.osq and hotel.hname=hotoffer.hname and airport.aname=airoffer.aname and airport.classd=airoffer.classd and hotoffer.room_type=hotel.room_type";

                Statement ps= con.createStatement();
                System.out.println("hi2");
                ps.executeUpdate(query);

                ResultSet rs=ps.executeQuery(query);
                System.out.println("hi1");
                this.getContentPane().setLayout(new FlowLayout());
                while(rs.next()){
                    System.out.println("hi3");
                    tod =rs.getString("Date_to");
                    fromd = rs.getString("Date_from");
                    descrp= rs.getString("Descrp");
                    todes= rs.getString("to_Des");
                    fromdes= rs.getString("From_des");
                    System.out.println("hi35");
                    id=Integer.parseInt(rs.getString("OSQ"));

                    classd= Integer.parseInt(rs.getString("classd"));
                    hprice= Integer.parseInt(rs.getString("hprice"));
                    tprice= Integer.parseInt(rs.getString("tprice"));
                    hotel=rs.getString("hname");
                    airport=rs.getString("aname");
                    room=rs.getString("room_type");
                    System.out.println("hi34");

                    //JTextPane t1= new JTextPane ();
                    //               System.out.println(id+hotel+airport);
                    //               this.appendToPane(t1,"From Date  :"+fromd+"\n");

                    java.util.Date d1 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(fromd);
                    java.util.Date d2 =  new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(tod);
                    String []aa=fromd.split(" ");
                    String []bb=tod.split(" ");
                    LocalDate dd1=LocalDate.parse(aa[0]);
                    LocalDate dd2=LocalDate.parse(bb[0]);
                    long day= ChronoUnit.DAYS.between(dd2, dd1);
                    System.out.println(day);
                    cost = day*hprice +tprice;
                    cost=cost+cost*.2;

                    if(cost<=Integer.parseInt(value.getText())){
                        JTextArea t1= new JTextArea ();
                        t1.append("From Date  :"+fromd+"\n");

                        t1.append("From Date  :"+fromd+"\n");
                        t1.append("To Date  :"+tod+"\n");
                        t1.append(" From :"+fromdes+"\n");
                        t1.append("To  :"+todes+"\n");
                        t1.append("Hotel Name :"+hotel+"\n");
                        t1.append("Room Type :"+room+"\n");
                        t1.append("Airport name :"+airport+"\n");
                        t1.append("Flight Class :"+classd+"\n");
                        t1.append("Discription :"+descrp+"\n");
                        t1.append("Total Cost :"+cost+"\n");

                        t1.setName(count+"");
                        count++;

                        JButton b= new JButton ("BOOK OFFER");
                        //              p.setPreferredSize(new Dimension(350,190));
                        JPanel p= new JPanel (new GridLayout(1,2));
                        p.removeAll();
                        p.add(t1);
                        //p.add(b);
                        this.add(p);
                        this.revalidate();
                        this.repaint();
                        b.addActionListener(this);
                        b.setActionCommand("book "+id);
                    }

                    //               t1.insert(airport,300);
                    //               t1.insert(classd+"",400);
                    //               t1.insert(room,5000);
                    //               t1.insert(descrp,600);
                    //               t1.insert(fromdes,700);
                    //               t1.insert(todes,800);

                    //               listt.add(t1);
                    //               GridBagConstraints gtf= new GridBagConstraints();
                    //               gtf.fill=GridBagConstraints.HORIZONTAL;
                    //               gtf.weightx=.5;
                    //               gtf.gridx=0;
                    //               gtf.gridwidth=2;
                    //               gtf.gridy=3+listt.size();
                    //               add (t1,gtf);
                    //               revalidate();
                    //               repaint();

                    //              t1.setText(id+"");
                    //              this.getContentPane().setLayout(new FlowLayout());
                    //                this.add(t1);

                }

                // JOptionPane.showMessageDialog(null, "no");

                con.close();
            } catch (Exception ex) {
                System.out.println(ex);
                // Logger.getLogger(employy.class.getName()).log(Level.SEVERE, null, ex);
                //

            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> filter;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField value;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
